// <auto-generated />
using Evaproject2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Evaproject2.Migrations
{
    [DbContext(typeof(Evaproject2Context))]
    partial class Evaproject2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Evaproject2.Models.Aspecto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Calificacion");

                    b.Property<int>("CriterioID");

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FC");

                    b.Property<DateTime>("FM");

                    b.Property<double>("Valor");

                    b.HasKey("ID");

                    b.HasIndex("CriterioID");

                    b.ToTable("Aspecto");
                });

            modelBuilder.Entity("Evaproject2.Models.Convocatoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CriterioID");

                    b.Property<DateTime>("FC");

                    b.Property<DateTime>("FEnvio");

                    b.Property<DateTime>("FEvaluacion");

                    b.Property<DateTime>("FM");

                    b.Property<DateTime>("FRegistro");

                    b.Property<DateTime>("FResultados");

                    b.Property<int>("NoEvaluadores");

                    b.Property<int>("NoParticipantes");

                    b.Property<string>("Nombre");

                    b.Property<string>("RutaDescripcion");

                    b.Property<string>("RutaResultados");

                    b.HasKey("ID");

                    b.HasIndex("CriterioID");

                    b.ToTable("Convocatoria");
                });

            modelBuilder.Entity("Evaproject2.Models.Criterio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Calificacion");

                    b.Property<DateTime>("FC");

                    b.Property<DateTime>("FM");

                    b.HasKey("ID");

                    b.ToTable("Criterio");
                });

            modelBuilder.Entity("Evaproject2.Models.Evaluacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CriterioID");

                    b.Property<int>("EvaluadorID");

                    b.Property<DateTime>("FC");

                    b.Property<DateTime>("FM");

                    b.Property<int?>("InscripcionID");

                    b.Property<int?>("UsuarioID");

                    b.HasKey("ID");

                    b.HasIndex("CriterioID");

                    b.HasIndex("InscripcionID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Evaluacion");
                });

            modelBuilder.Entity("Evaproject2.Models.Inscripcion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ConvocatoriaID");

                    b.Property<DateTime>("FC");

                    b.Property<DateTime>("FM");

                    b.Property<int>("ParticipanteID");

                    b.Property<string>("PdfProyecto");

                    b.Property<int>("TipoInscripcion");

                    b.Property<int?>("UsuarioID");

                    b.HasKey("ID");

                    b.HasIndex("ConvocatoriaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Inscripcion");
                });

            modelBuilder.Entity("Evaproject2.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<string>("CampoEstudios");

                    b.Property<string>("Celular");

                    b.Property<string>("Ciudad");

                    b.Property<string>("CodigoPostal");

                    b.Property<string>("Correo");

                    b.Property<string>("Domicilio");

                    b.Property<DateTime>("FC");

                    b.Property<DateTime>("FM");

                    b.Property<DateTime>("FNacimiento");

                    b.Property<string>("NivelEstudios");

                    b.Property<string>("Nombre");

                    b.Property<string>("Pwd");

                    b.Property<int>("TipoUsuario");

                    b.HasKey("ID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Evaproject2.Models.Aspecto", b =>
                {
                    b.HasOne("Evaproject2.Models.Criterio", "Criterio")
                        .WithMany("Aspectos")
                        .HasForeignKey("CriterioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Evaproject2.Models.Convocatoria", b =>
                {
                    b.HasOne("Evaproject2.Models.Criterio", "Criterio")
                        .WithMany("Convocatorias")
                        .HasForeignKey("CriterioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Evaproject2.Models.Evaluacion", b =>
                {
                    b.HasOne("Evaproject2.Models.Criterio", "Criterio")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("CriterioID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Evaproject2.Models.Inscripcion")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("InscripcionID");

                    b.HasOne("Evaproject2.Models.Usuario", "Usuario")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("Evaproject2.Models.Inscripcion", b =>
                {
                    b.HasOne("Evaproject2.Models.Convocatoria", "Convocatoria")
                        .WithMany("Inscripciones")
                        .HasForeignKey("ConvocatoriaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Evaproject2.Models.Usuario", "Usuario")
                        .WithMany("Inscripciones")
                        .HasForeignKey("UsuarioID");
                });
#pragma warning restore 612, 618
        }
    }
}
